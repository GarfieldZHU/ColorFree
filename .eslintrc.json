{
  "env": {
    "browser": true,
    "es6": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "airbnb",
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:import/electron",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "prettier/react",
    "prettier/@typescript-eslint"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "project": "./tsconfig.json"
  },
  "plugins": [
    "babel",
    "import",
    "jest",
    "jsx-a11y",
    "react",
    "react-hooks",
    "prettier",
    "promise",
    "typescript",
    "@typescript-eslint"
  ],
  "rules": {
    "no-restricted-syntax": [
      "error",
      {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement"
      },
      {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement"
      },
      {
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement"
      }
    ],

    // Coding style
    "key-spacing"          : "off",
    "jsx-quotes"           : ["error", "prefer-single"],
    "max-len"              : ["warn", 120, 2],
    "object-curly-spacing" : ["error", "always"],
    "indent": ["error", 2, {"ignoredNodes": ["JSXElement *", "JSXElement"]}],
    "comma-dangle"         : "off",
    "quotes"               : ["warn", "single", {"allowTemplateLiterals": true}],
    "semi"                 : "off",
    "space-before-function-paren" : "off",
    "camelcase"            : ["error", { "properties": "always" }],
    "no-multi-str": "off",
    "no-invalid-this": "off",
    "arrow-parens": "off",
    "no-unexpected-multiline": "error",

    "no-unused-expressions": "off",
    "no-unused-vars": "off",
    "no-use-before-define": [
      "warn",
      {
        "functions": false,
        "classes": false,
        "variables": false
      }
    ],
    "no-useless-escape": "warn",

    "no-bitwise": "off",
    "no-console": "off",
    "no-nested-ternary": "off",
    "no-underscore-dangle": "off",
    "no-param-reassign": "off",
    "consistent-return": "off",
    "no-plusplus": "off",
    "object-property-newline": "off",
    "object-curly-newline": ["error", {"multiline": true}],
    "import/extensions": "off",
    "import/prefer-default-export": "off",
    "import/no-unresolved": "off",
    "import/no-extraneous-dependencies": ["error", {"devDependencies": true}],
    "max-classes-per-file": "off",

    // TypeScript
    "typescript/no-unused-vars": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-var-requires": 0,
    "@typescript-eslint/indent": 0,
    "@typescript-eslint/camelcase": 0,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/no-non-null-assertion": 0,
    "@typescript-eslint/no-use-before-define": 0,
    "@typescript-eslint/member-delimiter-style": 0,
    "@typescript-eslint/no-unused-vars": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/explicit-member-accessibility": 0,
    "@typescript-eslint/no-angle-bracket-type-assertion": 0,

    // React style
    "react/no-multi-comp": "off",
    "react/no-did-update-set-state": "error",
    "react/no-unknown-property": "error",
    "react/no-unused-prop-types": "error",
    "react/no-unused-state": "warn",
    "react/no-find-dom-node": "warn",
    "react/no-array-index-key": "warn",
    "react/prop-types": "warn",
    "react/react-in-jsx-scope": "error",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-no-bind": ["error", {
      "allowArrowFunctions": true,
      "allowBind": false,
      "ignoreRefs": true
    }],
    "react/jsx-indent-props": ["error", "first"],
    "react/require-default-props": "off",
    "react/jsx-closing-bracket-location": "off",
    "react/jsx-closing-tag-location": "off",
    "react/jsx-first-prop-new-line": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-filename-extension": "off",
    "react/jsx-handler-names": "warn",
    "react/prefer-stateless-function": "warn",
    "react/jsx-curly-spacing": 0,
    "react/no-access-state-in-setstate": 0,
    "react/destructuring-assignment": 0,
    "react/display-name": 0,
    "react/static-property-placement": 0,
    "react/state-in-constructor": 0,

    // A11y
    "jsx-a11y/aria-role": "warn",
    "jsx-a11y/no-noninteractive-tabindex": "warn",
    "jsx-a11y/click-events-have-key-events": "warn",
    "jsx-a11y/no-static-element-interactions": "warn",
    "jsx-a11y/anchor-has-content": "warn",
    "jsx-a11y/anchor-is-valid": "warn",
    "jsx-a11y/label-has-associated-control": "warn",

    // Jest
    "jest/no-disabled-tests": "warn",
    "jest/no-focused-tests": "error",
    "jest/no-identical-title": "error",
    "jest/prefer-to-have-length": "warn",
    "jest/valid-expect": "error"
  }
}